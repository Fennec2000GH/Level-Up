version: 2.1

orbs: 
  python: circleci/python@2.0.3
  rust: circleci/rust@1.6.0

jobs:
  # Build
  install_python_dependencies:
    docker:
      - image: cimg/python:3.10.4

    steps:
      - checkout
      - python/install-packages:
          venv-path: venv

      - run:
          name: Set up virtualenv
          command: > 
            python -m venv venv && 
            source ./venv/bin/activate

  install_rust_dependencies:
    docker:
      - image: cimg/rust:1.61.0

    steps:
      - checkout
      - rust/install

  pyo3_initialize:
    docker:
      - image: cimg/base:stable

    steps:
      - checkout
      - run:
          name: Install maturin
          command: pip install maturin

      - run:
          name: Generate new package source for PyO3
          command: maturin init

  pyo3_develop:
    docker:
      - image: cimg/base:stable

    steps:
      - checkout
      - run:
          name: Install maturin
          command: pip install maturin

      - run:
          name: Build package and install Rust bindings into virtualenv
          command: maturin develop

  # Test
  test_pyo3:
    docker:
      - image: cimg/python:3.10.4

    working_directory: ~/project/src/

    steps:
      - checkout
      - run:
          name: Run sample code using imported library compiled from Rust
          command: python main.py

workflows:
  dev:
    jobs:
      - install_python_dependencies
      - install_rust_dependencies
      - pyo3_initialize:
          requires: 
            - install_python_dependencies
      - pyo3_develop:
          requires:
            - pyo3_initialize
      - test_pyo3:
          requires:
            - pyo3_develop
